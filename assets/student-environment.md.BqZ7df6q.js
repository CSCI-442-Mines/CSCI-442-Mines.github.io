import{_ as o,c as t,o as s,ah as i}from"./chunks/framework.D6otvB2a.js";const n="/assets/vscode-extensions-sidebar.0QfkThI7.png",a="/assets/vscode-open-folder-dropdown.CNlvLPoY.png",r="/assets/vscode-reopen-in-container-popup.D7El6C9K.png",l="/assets/vscode-new-terminal-dropdown.CEi70jW2.png",c="/assets/vscode-integrated-terminal.Dp1xYIAC.png",d="/assets/vscode-clone-first-time.Bu7RqM5U.png",p="/assets/vscode-open-recent-dropdown.BLZc4U5S.png",h="/assets/vscode-open-folder-prompt-workspace.B-PzKkkH.png",u="/assets/vscode-open-workspace-popup.DEL7OCd-.png",g="/assets/vscode-recommended-extensions-popup.B6qrNv9H.png",m="/assets/vscode-command-palette.Cb2A4l5t.png",k="/assets/vscode-recommended-extensions-sidebar.DCbrLXMD.png",E=JSON.parse('{"title":"Student Environment","description":"","frontmatter":{},"headers":[],"relativePath":"student-environment.md","filePath":"student-environment.md","lastUpdated":1743713966000}'),y={name:"student-environment.md"};function f(b,e,v,w,C,S){return s(),t("div",null,e[0]||(e[0]=[i(`<h1 id="student-environment" tabindex="-1">Student Environment <a class="header-anchor" href="#student-environment" aria-label="Permalink to &quot;Student Environment&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This page contains instructions for setting up your development environment for this course. While there&#39;s a lot information here, it <strong>shouldn&#39;t take more than about 30 minutes to complete</strong> (depending on your internet connection). If you have any issues, please reach out to the course staff for help.</p></div><h2 id="what-are-docker-dev-containers" tabindex="-1">What are Docker/Dev Containers? <a class="header-anchor" href="#what-are-docker-dev-containers" aria-label="Permalink to &quot;What are Docker/Dev Containers?&quot;">​</a></h2><p>Docker is a tool that allows you to easily run software in an isolated, reproducible environment in the form of a container. Dev containers build on top of Docker containers, integrating with code editors like Visual Studio Code to provide a seamless development experience. We will use Docker dev containers in this course to provide a consistent baseline environment for students and instructors alike, with all the necessary tools and libraries pre-installed!</p><h2 id="setup-instructions" tabindex="-1">Setup Instructions <a class="header-anchor" href="#setup-instructions" aria-label="Permalink to &quot;Setup Instructions&quot;">​</a></h2><h3 id="install-docker" tabindex="-1">Install Docker <a class="header-anchor" href="#install-docker" aria-label="Permalink to &quot;Install Docker&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you already have Docker installed and verified it is working (<code>docker run hello-world</code>), you can skip this step.</p></div><p>First, you will need to install Docker on your computer. Follow the instructions for your operating system below:</p><ul><li><strong>Windows</strong>: <a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noreferrer">Docker Desktop for Windows</a><ul><li>We recommend using the WSL 2 backend for Docker Desktop on Windows.</li></ul></li><li><strong>Mac</strong>: <a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noreferrer">Docker Desktop for Mac</a></li><li><strong>Linux</strong>: <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noreferrer">Docker Engine for Linux</a><ul><li>We strongly <strong>do not recommend</strong> using the Docker snap package nor the Docker Desktop application on Linux.</li><li>Make sure to also complete the <a href="https://docs.docker.com/engine/install/linux-postinstall/" target="_blank" rel="noreferrer">post-installation steps for Linux</a>.</li></ul></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you are running Docker Engine on Linux, because the <a href="https://docs.docker.com/engine/security/rootless/" target="_blank" rel="noreferrer">Docker daemon runs as root by default</a>, you can cause damage to your system if you run commands in the dev container as root (i.e.: with <code>sudo</code>) carelessly. As always, practice safe computing and only run commands you understand.</p></div><p>Once this is complete, please open your system&#39;s terminal for your operating system below:</p><ul><li><strong>Windows</strong>: Open CMD or PowerShell <ul><li>Do not use Git Bash, WSL, Cygwin, MinGW, or any other terminal emulator.</li></ul></li><li><strong>Mac</strong>: Open Terminal</li><li><strong>Linux</strong>: Open Terminal</li></ul><p><em>Note: when we refer to the <strong><u>system</u> terminal</strong> in these instructions, we mean the terminal for your operating system as described above.</em></p><p>Then, run the following command to verify that Docker is installed correctly:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre></div><p>You should see a message that says:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Hello from Docker!</span></span>
<span class="line"><span>This message shows that your installation appears to be working correctly.</span></span>
<span class="line"><span>...</span></span></code></pre></div><p>If you see this message, Docker is installed correctly and you can proceed to the next step. If you encounter any issues, please double-check you&#39;ve read everything above and try again. If you still have issues, please reach out to the course staff for help.</p><h3 id="install-vs-code-visual-studio-code" tabindex="-1">Install VS Code (Visual Studio Code) <a class="header-anchor" href="#install-vs-code-visual-studio-code" aria-label="Permalink to &quot;Install VS Code (Visual Studio Code)&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you already have VS Code installed, you can skip this step. Note that Visual Studio and Visual Studio <u>Code</u> are different code editors, both made by Microsoft.</p></div><p>We recommend using Visual Studio Code (VS Code) as your code editor for this course. You can download it for free from <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">here</a>.</p><h3 id="install-vs-code-extensions" tabindex="-1">Install VS Code Extensions <a class="header-anchor" href="#install-vs-code-extensions" aria-label="Permalink to &quot;Install VS Code Extensions&quot;">​</a></h3><p>Once you have installed VS Code, you will need to install the following extensions:</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers" target="_blank" rel="noreferrer">Dev Containers</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you are not familiar with how to install extensions in VS Code, you can follow <a href="https://code.visualstudio.com/docs/editor/extension-marketplace#_install-an-extension" target="_blank" rel="noreferrer">these</a> detailed instructions, but in short, you can click on the extensions icon in the left sidebar:</p><p><img src="`+n+'" alt="Extensions sidebar" data-zoomable="true"></p><p>Then, search for the desired extension, click on the Install button, and wait for the installation to complete.</p></div><h3 id="setup-the-course-dev-container" tabindex="-1">Setup the Course Dev Container <a class="header-anchor" href="#setup-the-course-dev-container" aria-label="Permalink to &quot;Setup the Course Dev Container&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Failure to follow the instructions in this section <strong>exactly</strong> as presented may result in permanently losing your work for this course! You have been warned!</p></div><p>You will create <strong>a single</strong> dev container, which you will reuse for all projects in this course. The structure of your dev container at the <strong>end of this course</strong> will look like:</p><ul><li><code>/workspace/</code>: This is the directory of the dev container which is shared with your host machine. <strong>Any data outside of this directory will not be saved when the container is stopped.</strong><ul><li><code>.devcontainer/</code>: This directory contains the configuration for the dev container itself. Do not modify this directory.</li><li><code>scripts/</code>: This directory contains miscellaneous scripts for the course. A course staff member will provide instructions on how to use these utilities, if necessary.</li><li><code>README.md</code>: This is the file you are currently reading. This file contains helpful reminders and instructions for using the dev container.</li><li><code>SEMESTER-project-1-USERNAME/</code>: This is your personal project 1 repository, where <code>SEMESTER</code> is the current semester (e.g.: <code>sp25</code>) and <code>USERNAME</code> is your GitHub username (e.g.: <code>ghost</code>). It will be created for you when you accept the GitHub Classroom assignment for project 1 (in Canvas).</li><li><code>SEMESTER-project-2-USERNAME/</code>: Same as above, but for project 2.</li><li><code>SEMESTER-project-3-USERNAME/</code>: Same as above, but for project 3.</li><li><code>SEMESTER-project-4-USERNAME/</code>: Same as above, but for project 4.</li><li><code>SEMESTER-project-5-USERNAME/</code>: Same as above, but for project 5.</li></ul></li></ul><p>To set up the course dev container, first download <a href="https://github.com/csci-442-mines/student-env/releases/latest/download/student-env.zip" target="_blank" rel="noreferrer">this</a> file and extract it to a directory of your choice (Somewhere that is easy to access and safe from accidental deletion). Then, open the top level of extracted directory in VS Code by any <strong>one</strong> of the following methods:</p><ol><li>(Recommended) Open VS Code and select <code>File &gt; Open Folder...</code>: <img src="'+a+'" alt="Open folder dropdown" data-zoomable="true"> Then, navigate to the directory where you extracted the course dev container. You should see VS Code switch to the directory you selected.</li><li>Right-click on the directory and select <code>Open with Code</code>. You should see VS Code open with the directory loaded in the window. Note that this option may not be available on all systems.</li><li>Run <code>code PATH_TO_DIRECTORY</code> in your system&#39;s terminal (Where <code>PATH_TO_DIRECTORY</code> is the actual path to the directory). You should see VS Code open with the directory loaded in the window.</li></ol><p>Now that you have the directory open in VS Code, you should see a popup notification, typically on the bottom right of the window, that says <code>Reopen in Container</code>:</p><p><img src="'+r+'" alt="Reopen in Container popup" data-zoomable="true"></p><p>Click on <code>Reopen in Container</code> to build the dev container (which can take a few minutes). Once the container is built, the loading bars will disappear. Open the <strong><u>integrated</u></strong> terminal (Not the <u>system</u> terminal) by selecting <code>Terminal &gt; New Terminal</code> from the top menu:</p><p><img src="'+l+'" alt="New terminal dropdown" data-zoomable="true"></p><p>You should see a terminal window open at the bottom of the window:</p><p><img src="'+c+`" alt="Integrated terminal" data-zoomable="true"></p><p>In the integrated terminal, run the following command to verify that the dev container is correctly set up to save your work:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /workspace/hello-world.txt</span></span></code></pre></div><p>If you navigate to the directory where you extracted the course dev container in your system&#39;s file explorer/viewer, you should see a new file named <code>hello-world.txt</code>. If you do not see this file, please double-check you&#39;ve followed the instructions above and try again. If you still have issues, please stop immediately and reach out to the course staff for help.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Do not proceed past this point until you have verified that the dev container is correctly set up to save your work!</p></div><h3 id="setup-git-inside-the-dev-container" tabindex="-1">Setup Git Inside the Dev Container <a class="header-anchor" href="#setup-git-inside-the-dev-container" aria-label="Permalink to &quot;Setup Git Inside the Dev Container&quot;">​</a></h3><p>First, configure Git with your name and email address by running the following commands in the integrated terminal:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;YOUR_NAME&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;YOUR_EMAIL&quot;</span></span></code></pre></div><p>Where <code>YOUR_NAME</code> is your GitHub username (e.g.: <code>ghost</code>) and <code>YOUR_EMAIL</code> is the email address (e.g.: <code>ghost@example.com</code>).</p><p>Now, let&#39;s set up authentication with GitHub. You can use any <strong>one</strong> of the following methods:</p><ol><li><p>(Recommended) Clone a private repository from GitHub for the first time <strong>using HTTPS</strong>. When you clone a private repository <strong>using HTTPS</strong> for the first time, you will be prompted to authenticate with GitHub:</p><p><img src="`+d+'" alt="Clone first time" data-zoomable="true"></p><p>Click <code>Allow</code>, and follow the prompts to sign in with your GitHub account. Note that if you do not use the HTTPS URL, you will get an error message when cloning the repository.</p></li><li><p>Manually setup SSH keys. You can follow the detailed instructions <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account" target="_blank" rel="noreferrer">here</a>, but in short, generate new SSH keypair by running the below commands in the integrated terminal:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ed25519</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -N</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519</span></span></code></pre></div><p>Then, get the public key with:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519.pub</span></span></code></pre></div><p>Finally, go to your <a href="https://github.com/settings/keys" target="_blank" rel="noreferrer">GitHub SSH keys settings</a>, click <code>New SSH key</code> (<strong>Not</strong> <code>New GPG key</code>), give a descriptive title, set the key type to <code>Authentication key</code>, copy-paste the public key into the key field, and click <code>Add SSH key</code>.</p></li></ol><h3 id="per-project-setup" tabindex="-1">Per-Project Setup <a class="header-anchor" href="#per-project-setup" aria-label="Permalink to &quot;Per-Project Setup&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Failure to follow the instructions in this section <strong>exactly</strong> as presented may result in corrupting your source code!</p></div><p>For each project in this course, you will need to accept the GitHub Classroom assignment (in Canvas). This will create a new private repository just for you under the <code>csci-442-mines</code> GitHub organization based on the project template. Then, start the dev container by following any <strong>one</strong> of the following methods:</p><ol><li>(Recommended) Open VS Code, select <code>File &gt; Open Recent</code>: <img src="'+p+'" alt="Open recent dropdown" data-zoomable="true"> and then select the <code>PATH_TO_DIRECTORY/student-env [Dev Container]</code> (Where <code>PATH_TO_DIRECTORY</code> is the actual path to the directory). Note that you <strong>must select the <code>[Dev Container]</code> entry</strong>!</li><li>Open VS Code, select <code>File &gt; Open Folder...</code>, navigate to the directory where you extracted the course dev container, and click on <code>Reopen in Container</code> popup (the same way you did for <a href="#setup-the-course-dev-container">setting up the course dev container</a>).</li></ol><p>Now that you&#39;ve opened the dev container, open the top level of the workspace directory in the dev container by selecting <code>File &gt; Open Folder...</code>, navigate to the <code>/workspace/</code> directory, and click <code>Ok</code>:</p><p><img src="'+h+'" alt="Open folder prompt for the  directory" data-zoomable="true"></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you skip this step (which must be done each time you set up a new project), you may end up cloning repositories inside of each other, which will cause issues when committing and pushing changes to GitHub.</p></div><p>Once VS Code has opened/changed to the <code>/workspace/</code> directory, open the integrated terminal, and run the following command to clone your project repository:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PERSONAL_PROJECT_REPOSITORY_URL</span></span></code></pre></div><p>Where <code>PERSONAL_PROJECT_REPOSITORY_URL</code> is the URL of your personal project repository (e.g.: <code>https://github.com/csci-442-mines/sp25-project-1-ghost.git</code> if using HTTPS, or <code>git@github.com:CSCI-442-Mines/sp25-project-1-ghost.git</code> if using SSH). You can find this URL by going to the GitHub Classroom assignment page, opening your repository, and clicking on the green <code>Code</code> button, and selecting the appropriate protocol.</p><p>Once the repository is cloned, open the project-specific <code>*.code-workspace</code> file (e.g.: <code>project-1.code-workspace</code>) by clicking on it in the file explorer. You should see a popup notification, typically on the bottom right of the window, that says <code>Open Workspace</code>:</p><p><img src="'+u+'" alt="Open Workspace popup" data-zoomable="true"></p><p>Click on <code>Open Workspace</code> to open the project-specific workspace (This will change VS Code&#39;s working directory to the project directory and load the project-specific settings). Once the workspace is open, you may get yet another notification asking if you would like to install the recommended extensions for the workspace:</p><p><img src="'+g+'" alt="Install recommended extensions popup" data-zoomable="true"></p><p>Click on <code>Install</code> to install the recommended extensions. Alternatively, you can install the recommended workspace extensions by pressing <code>CTRL+SHIFT+P</code> (or <code>CMD+SHIFT+P</code> on Mac) to open the command palette:</p><p><img src="'+m+'" alt="Command palette" data-zoomable="true"></p><p>Then, type <code>Extensions: Show Recommended Extensions</code>, and press <code>Enter</code>. Then, click on the cloud icon with a down arrow to install all recommended extensions:</p><p><img src="'+k+`" alt="Extensions sidebar with recommended extensions" data-zoomable="true"></p><p>Once the extensions are installed, you can now start working on your project! Note that the <code>*.code-workspace</code> file (e.g.: <code>project-1.code-workspace</code>) we provide is pre-configured with everything you need for one-click building/debugging. You can find more information on how to use the workspace file in the each project&#39;s <code>README.md</code> file.</p><h2 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">​</a></h2><h3 id="vs-code-takes-a-very-long-time-to-build-the-dev-container-fails-to-build-the-dev-container" tabindex="-1">VS Code Takes a Very Long Time to Build the Dev Container/Fails to Build the Dev Container <a class="header-anchor" href="#vs-code-takes-a-very-long-time-to-build-the-dev-container-fails-to-build-the-dev-container" aria-label="Permalink to &quot;VS Code Takes a Very Long Time to Build the Dev Container/Fails to Build the Dev Container&quot;">​</a></h3><ul><li><p>Symptom: building the dev container takes a very long time (e.g.: 20+ minutes) or VS Code fails to build the dev container with an error message related to Docker.</p></li><li><p>Solution: this can happen if you have a slow/dysfunctional internet connection or computer. To workaround this, we provide a pre-built dev container image (<code>ghcr.io/csci-442-mines/student-env</code>). To use it, edit the <code>.devcontainer/devcontainer.json</code> like so:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// Use the prebuilt image (Mutually exclusive with &quot;build&quot;!):</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- // &quot;image&quot;: &quot;ghcr.io/csci-442-mines/student-env:latest&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ &quot;image&quot;: &quot;ghcr.io/csci-442-mines/student-env:latest&quot;,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// Build the image yourself (Mutually exclusive with &quot;image&quot;!):</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- &quot;build&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-   &quot;dockerfile&quot;: &quot;Dockerfile&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-   &quot;context&quot;: &quot;..&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- },</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ // &quot;build&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ //   &quot;dockerfile&quot;: &quot;Dockerfile&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ //   &quot;context&quot;: &quot;..&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ // },</span></span></code></pre></div><p><em>Note: the <code>+</code> and <code>-</code> symbols are non-literal and are used to indicate lines that should be added and removed, respectively. If you don&#39;t already have an <code>image</code> line, you can just add the <code>image</code> line like above and comment out the <code>build</code> section.</em></p><p>Then, rebuild the dev container by clicking on the green <code>Reopen in Container</code> button in the bottom right corner of the window or by opening the command palette (<code>CTRL+SHIFT+P</code> or <code>CMD+SHIFT+P</code> on Mac) and typing <code>Dev Containers: Rebuild Container</code>.</p></li></ul><h3 id="cloning-using-https-instead-of-ssh" tabindex="-1">Cloning Using HTTPS Instead of SSH <a class="header-anchor" href="#cloning-using-https-instead-of-ssh" aria-label="Permalink to &quot;Cloning Using HTTPS Instead of SSH&quot;">​</a></h3><ul><li>Symptom: you receive an error message when cloning a repository similar to:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fatal: could not read Username for &#39;https://github.com&#39;: terminal prompts disabled</span></span>
<span class="line"><span>remote: Repository not found.</span></span></code></pre></div><ul><li>Solution: clone using the SSH URL (e.g.: <code>git@github.com:CSCI-442-Mines/sp25-project-1-ghost.git</code>) instead of the HTTPS URL (e.g.: <code>https://github.com/CSCI-442-Mines/sp25-project-1-ghost.git</code>).</li></ul><h3 id="cloning-using-ssh-instead-of-https-ssh-key-not-set-up-correctly" tabindex="-1">Cloning Using SSH Instead of HTTPS/SSH Key Not Set Up Correctly <a class="header-anchor" href="#cloning-using-ssh-instead-of-https-ssh-key-not-set-up-correctly" aria-label="Permalink to &quot;Cloning Using SSH Instead of HTTPS/SSH Key Not Set Up Correctly&quot;">​</a></h3><ul><li>Symptom: you receive an error message when cloning a repository similar to:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git@github.com: Permission denied (publickey).</span></span>
<span class="line"><span>fatal: Could not read from remote repository.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please make sure you have the correct access rights</span></span>
<span class="line"><span>and the repository exists.</span></span></code></pre></div><ul><li>Solution: if you are intending on using HTTPS, use the HTTPS URL (e.g.: <code>https://github.com/CSCI-442-Mines/sp25-project-1-ghost.git</code>). If you are intending on using SSH, make sure you set up your SSH key correctly by following the instructions in the <a href="#setup-git-inside-the-dev-container">Setup Git Inside the Dev Container</a> section.</li></ul><h3 id="can-t-find-the-project-specific-code-workspace-file-e-g" tabindex="-1">Can&#39;t Find The Project-Specific <code>*.code-workspace</code> File (e.g.: <a class="header-anchor" href="#can-t-find-the-project-specific-code-workspace-file-e-g" aria-label="Permalink to &quot;Can&#39;t Find The Project-Specific \`*.code-workspace\` File (e.g.:&quot;">​</a></h3><p><code>project-1.code-workspace</code>)</p><ul><li>Symptom: you can&#39;t find the project-specific <code>*.code-workspace</code> file (e.g.: <code>project-1.code-workspace</code>) in VS Code&#39;s file explorer.</li><li>Solution: make sure you have opened the top level of the workspace directory in the dev container (See the <a href="#per-project-setup">Per-Project Setup</a> section for more details).</li></ul><h3 id="missing-debug-configurations-tools" tabindex="-1">Missing Debug Configurations/Tools <a class="header-anchor" href="#missing-debug-configurations-tools" aria-label="Permalink to &quot;Missing Debug Configurations/Tools&quot;">​</a></h3><ul><li>Symptom: the VS Code debug configurations and/or build/debug tools (e.g.: <code>clang</code>, <code>cmake</code>, <code>gcc</code>, <code>g++</code>, <code>make</code>, etc.) are missing.</li><li>Solution: double check you have opened the course dev container <strong>first</strong>, and then opened the project-specific <code>*.code-workspace</code> file (e.g.: <code>project-1.code-workspace</code>) <strong>second</strong>. If you open the project-specific <code>*.code-workspace</code> file (e.g.: <code>project-1.code-workspace</code>) without first opening the course dev container (or in different dev container), the debug configurations and/or tools will be missing.</li></ul>`,82)]))}const T=o(y,[["render",f]]);export{E as __pageData,T as default};
